/*
 * File: app/view/RestaurantPanel.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TileView.view.RestaurantPanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.restopanel',

    requires: [
        'TileView.view.Restaurant'
    ],

    height: 400,
    width: 600,
    layout: {
        type: 'border'
    },
    title: 'Restaurants',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    region: 'east',
                    id: 'tileViewPanel',
                    tpl: [
                        '{name}'
                    ],
                    width: 150
                },
                {
                    xtype: 'restaurant',
                    region: 'center'
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'splitbutton',
                            menu: {
                                xtype: 'menu',
                                minWidth: 50,
                                showSeparator: false,
                                items: [
                                    {
                                        xtype: 'switchbuttonsegment',
                                        activeItem: 1,
                                        items: [
                                            {
                                                xtype: 'button',
                                                viewMode: 'default',
                                                iconCls: 'icon-default',
                                                tooltip: 'Details'
                                            },
                                            {
                                                xtype: 'button',
                                                viewMode: 'tileIcons',
                                                iconCls: 'icon-tile',
                                                tooltip: 'Tiles'
                                            },
                                            {
                                                xtype: 'button',
                                                viewMode: 'mediumIcons',
                                                iconCls: 'icon-medium',
                                                tooltip: 'Icons'
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            xtype: 'splitbutton',
                            menu: {
                                xtype: 'menu',
                                items: [
                                    {
                                        xtype: 'menuitem',
                                        viewMode: 'default',
                                        iconCls: 'icon-default',
                                        text: 'Menu Item'
                                    },
                                    {
                                        xtype: 'menuitem',
                                        viewMode: 'tileIcons',
                                        iconCls: 'icon-tile',
                                        text: 'Menu Item'
                                    },
                                    {
                                        xtype: 'menuitem',
                                        viewMode: 'mediumIcons',
                                        iconCls: 'icon-medium',
                                        text: 'Menu Item'
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});